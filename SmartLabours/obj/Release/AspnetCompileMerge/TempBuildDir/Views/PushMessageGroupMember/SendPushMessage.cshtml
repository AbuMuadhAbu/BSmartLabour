@model SmartLabours.Models.TBL_NotificationGroupMaster
@{
    ViewBag.Title = "SendPushMessage";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<link href="~/Content/themes/base/base.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery.ui.autocomplete.css" rel="stylesheet" />
<style type="text/css" >   
    .HeaderDiv {
        width:500px;text-align:center;padding-top:10px;
    }
</style>

@* Google Analytics COde  *@
<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-PTWMKL" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>(function (w, d, s, l, i) { w[l] = w[l] || []; w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' }); var f = d.getElementsByTagName(s)[0], j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src = '//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f); })(window, document, 'script', 'dataLayer', 'GTM-PTWMKL');</script>
<!-- End here -->

<script type="text/javascript">

    function PreviousPage() {
        window.location = "/PushMessageGroupMember/SendPushMessage";
    }

    function HomePage()
    {
        window.location = "/smart/DashBoard";
    }

    function Validate(e) {
       // debugger
        var i = 0;
        if ($('#Orgname').val() == '' && $('#UserCode1').val() == '1') {
            $('#lblOrgError').text('');
            $('#lblOrgError').text('Please Select Organization');
            i = 1;
        }
        if ($('#GroupName').val() == '') {
            $('#lblGroupError').text('');
            $('#lblGroupError').text('Please Select Group');
            i = 1;
        }    
        //if ($('#MsgName').val() == '') {
        //    $('#lblMsgNameError').text('');
        //    $('#lblMsgNameError').text('Please Select Message Name');
        //    i = 1;
        //}

        //if ($('#lblMsgNameError').text()!='')
        //{
        //    i = 1;
        //}

        if (i == 1) {
            (e.preventDefault) ? e.preventDefault() : e.returnValue = false;
            return false;
        }
        return true;
    }

    $(document).ready(function () {
        
        $("#Orgname").val('');
        $('#GroupName').val('');
        $("#GroupName").keypress(function (event) {
            
            $('#lblGroupError').text('');
            return true;

        });

        $("#Orgname").keypress(function (e) {
            //if (!((e.which >= 65 && e.which <= 90) || (e.which >= 97 && e.which <= 122) || e.which == 8 || e.which == 44 || e.which == 39 || e.which == 45 || e.which == 95 || e.which == 38 || e.which == 46 || (e.which >= 48 && e.which <= 57))) {
            //    e.preventDefault();
            //    return false;
            //}
            $('#lblOrgError').text('');
           // return true;

        });


        //$("#MsgName").keypress(function (event) {
        //    if (!AllowAlphaOnly(event)) {
        //        event.preventDefault();
        //        return false;
        //    }
        //    $('#lblMsgNameError').text('');
        //    return true;

        //});

        $("#Orgname").keyup(function (event) {
            if (event.keyCode == 8 || event.keyCode == 46) {
                $('#lblOrgError').text('');
            }
        });
        $("#GroupName").keyup(function (event) {
            if (event.keyCode == 8 || event.keyCode == 46) {
                $('#lblGroupError').text('');
            }
        });


        //$("#MsgName").keyup(function (event) {
        //    if (event.keyCode == 8 || event.keyCode == 46) {
        //        $('#lblMsgNameError').text('');
        //    }
        //});

        ////Contact number Only Allowed Numeric
        //$("#OrganisationContactno").keydown(function (e) {
        //    AllowNumericOnly(e);
        //});

        $('#Orgname').autocomplete({

            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("OrgNameAutoComplete", "OrganizationSubAdmin")',
                    dataType: "json",
                    cache: false,
                    delay: 10,
                    type: "get",
                    data: { term: request.term }
                }).done(function (data) {
                    response(data);
                });
            },
            change: function (event, ui) {  //CheckOrganizationName
                if ($('#Orgname').val() != '') {
                    $('#lblOrgError').text('');
                    $.ajax({
                        url: '@Url.Action("CheckOrganizationName", "Organization")',
                        dataType: "json",
                        cache: false,
                        type: "get",
                        data: { OrgName: $('#Orgname').val() },
                        success: function (data) {
                            // debugger
                            if ($('#Orgname').val() == '') {
                                data = 'Please Select Organization';
                            }
                            if (data != '1') {

                                $('#lblOrgError').text(data);
                            }
                            else {
                                $('#lblOrgError').text('');
                            }
                        },
                        error: function (data) {
                            // debugger
                        }
                    });
                }
                else {
                    $('#lblOrgError').text('');
                    $('#lblOrgError').text('Please Select Organization');
                }
            }
        });




$('#GroupName').autocomplete(
   {
       source: function (request, response) {
           //  debugger
           var str = $("#Orgname").val();
           // var str1 = $("#OrgName").val();
           $.ajax({
               url: '@Url.Action("GroupNameAutoComplete", "PushMessageGroupMaster")',
                       dataType: "json",
                       cache: false,
                       type: "get",
                       data: { term: request.term, org: str }
                   }).done(function (data) {
                       //debugger
                       response(data);
                   });
       },
       change: function (event, ui) {
           if ($('#GroupName').val() != '') {
               $.ajax({
                   url: '@Url.Action("CheckGroupName", "PushMessageGroupMaster")',
                   dataType: "json",
                   cache: false,
                   type: "get",
                   data: { GroupName: $('#GroupName').val(), OrgName: $('#Orgname').val() },
                   success: function (data) {
                       if (data != '1') {
                           $('#lblGroupError').text('');
                           $('#lblGroupError').text(data);
                           $("#LabourList").empty();
                           $("#LabourList").append('');
                           return false;
                       }
                       else {
                           $('#lblGroupError').text('');

                       }
                   },
                   error: function (data) {
                       // debugger
                   }
               });
           }
           else {
               $('#lblGroupError').text('');
              
           }
       }
       });

        @*$('#MsgName').autocomplete(
         {
             source: function (request, response) {
                 //debugger
                 $.ajax({
                     url: '@Url.Action("MessageNameAutoComplete", "PushNotificationMessageMaster")',
                     dataType: "json",
                     cache: false,
                     type: "get",
                     data: { term: request.term, OrgName: $('#Orgname').val() }
                 }).done(function (data) {
                     //debugger
                     response(data);
                 });
             }, change: function (event, ui) { 
                 if ($('#MsgName').val() != '')
                     {
                 $.ajax({
                     url: '@Url.Action("CheckMsgName", "PushNotificationMessageMaster")',
                     dataType: "json",
                     cache: false,
                     type: "get",
                     data: { MsgName: $('#MsgName').val(), OrgName: $('#Orgname').val() },
                     success: function (data) {                       
                         if ($('#MsgName').val() == '') {
                             data = '';
                         }
                         if (data != '1') {
                             $('#lblMsgNameError').text(data);
                         }
                         else {
                             $('#lblMsgNameError').text('');
                         }
                     },
                     error: function (data) {
                       
                     }
                 });
                 }
                 else
                 {
                     $('#lblMsgNameError').text('');
                 }
             }
         });*@

       

    })

</script>

<div class="content">
    <div class="wrapper">
        <div class="continn">
            <fieldset>
                <legend></legend>
                <h3>
                    Send  Message 
                </h3>
                <div class="clr2">
                </div>
                <div class="error_mesg" id="msShow1" >
                    <b>
                        <label id="lblErrormsg" >
                           @ViewBag.messagealert
                        </label>
                    </b>
                </div>
                <div class="suss_mesg" id="msShow2" >
                    <b>
                        <label id="lblError1" >
                              @ViewBag.messagealert1
                        </label>
                    </b>
                </div>
                <div class="fld_fd">
                    @using (Html.BeginForm("SendPushMessage", "PushMessageGroupMember", FormMethod.Post, new { id = "GroupId", @class = "form-horizontal", enctype = "multipart/form-data", autocomplete = "off" }))
                    {
                        <div>

                            <dl>
                                <dd>
                                    <span style="color:red;padding-right :2px;"> * </span>   Organization 
                                </dd>
                                <dt>
                                    @{
                                            <input id="UserCode1" style="display:none" value=@HttpContext.Current.Session["USERID"].ToString()>
                                            if (HttpContext.Current.Session["USERID"].ToString() == "1")
                                            {
                                                @Html.TextBoxFor(model => model.OrgName, new { maxlength = 35, id = "Orgname" })
                                                @*  @Html.DropDownList("OrgId", (SelectList)ViewBag.GetOrganizationNamelist, "Select", new { @class = "drop_down" })*@
                                               <span class="error">
                                                      <label id="lblOrgError" >@ViewBag.OrgAlert</label>
                                               </span>
                                             }
                                            else
                                             {
                                                @Html.TextBoxFor(model => model.OrgName, new { maxlength = 35, id = "txtOrgname", disabled = "disabled" })
                                                @*@Html.TextBox("OrgId", (string)ViewBag.GetOrganizationName, new {  id = "txtOrgName", disabled = "disabled" })*@
                                                @Html.TextBoxFor(model => model.OrgName, new { id = "Orgname",@style="display:none" });
                                             }
                                    }
                                </dt>
                            </dl>


                            <dl>
                                <dd>
                                    <span style="color:red;padding-right :2px;"> * </span>  Group 
                                </dd>
                                <dt>
                                    @Html.TextBoxFor(model => model.GroupName, new { maxlength = 50 ,@id="GroupName"})
                                    <span class="error">
                                        
                                        <label id="lblGroupError" >@ViewBag.OrgAlert</label>
                                    </span>
                                </dt>
                            </dl>
                            
                            @*<dl>
                                <dd>
                                    <span style="color:red;padding-right :2px;"> * </span>  Message Name
                                </dd>
                                <dt> 
                                    @Html.TextBoxFor(model => model.MsgName, new { maxlength = 50,@id="MsgName" })
                                    <span class="error">                                        
                                        <label id="lblMsgNameError" >@ViewBag.messagealertMsg</label>
                                    </span>
                                </dt>
                            </dl>*@
                            <div class="btn1 btn1-form">
                                <input type="submit" value="Send" title="Send" onclick="return Validate(this);" />
                                <input type="button" value="Clear" title="Clear" onclick="PreviousPage();" />
                                <input type="button" value="Back" title="Back" onclick="HomePage();" />
                            </div>
                        </div>
                    }
                </div>
            </fieldset>
        </div>
    </div>
</div>